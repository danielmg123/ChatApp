services:
  postgres-primary:
    image: postgres:15-alpine
    container_name: pg_primary
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pg_primary_data:/var/lib/postgresql/data
    command: >
      postgres -c wal_level=logical
               -c max_wal_senders=10
               -c max_replication_slots=10

  postgres-replica:
    build:
      context: .  # Path to project folder
      dockerfile: Dockerfile.replica
    container_name: pg_replica
    depends_on:
      - postgres-primary
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - pg_replica_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_INTERNAL://kafka:9092,PLAINTEXT_EXTERNAL://localhost:29092
      - KAFKA_LISTENERS=PLAINTEXT_INTERNAL://:9092,PLAINTEXT_EXTERNAL://:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "29092:29092"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  pg_primary_data:
  pg_replica_data: